import os
import re
import time
import random
from datetime import datetime, timedelta, timezone
from collections import defaultdict, deque
from dataclasses import dataclass

from dotenv import load_dotenv
from telegram import Update, ChatPermissions
from telegram.constants import ChatType
from telegram.ext import (
    ApplicationBuilder,
    ContextTypes,
    MessageHandler,
    CommandHandler,
    filters,
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
WINDOW_SECONDS = 60    # –æ–∫–Ω–æ –¥–ª—è –ø–æ–¥—Å—á—ë—Ç–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–π
THRESHOLD = 3          # —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –º–æ–∂–Ω–æ –Ω–∞—Ä—É—à–∏—Ç—å
BAN_SECONDS = 30       # –Ω–∞–∫–∞–∑–∞–Ω–∏–µ (–±–∞–Ω) –Ω–∞ 30 —Å–µ–∫—É–Ω–¥

# –§—Ä–∞–∑—ã –¥–ª—è –ú—É—Ä–∫–∏ üê∂
MURKA_REPLIES = {
    "–º—É—Ä–∫–∞ –∫–∞–∫ –¥–µ–ª–∞": [
        "–ì–∞–≤! –£ –º–µ–Ω—è –≤—Å—ë –æ—Ç–ª–∏—á–Ω–æ üêæ",
        "–õ—É—á—à–µ –≤—Å–µ—Ö! –í–µ–¥—å —è —Å–æ–±–∞—á–∫–∞ –ú—É—Ä–∫–∞ üê∂üíñ",
    ],
    "–º—É—Ä–∫–∞ –∫–æ–≥–æ —Ç—ã –ª—é–±–∏—à—å": [
        "–ö–æ–Ω–µ—á–Ω–æ –∂–µ —Ç–µ–±—è, –º–æ–π —á–µ–ª–æ–≤–µ–∫ üêæ‚ù§Ô∏è",
        "–õ—é–±–ª—é –≤—Å–µ—Ö, –∫—Ç–æ –¥–∞—ë—Ç –≤–∫—É—Å–Ω—è—à–∫–∏ üçñ",
    ],
    "–º—É—Ä–∫–∞ —Ö–æ—á–µ—à—å –≤–∫—É—Å–Ω—è—à–∫–∏": [
        "–ì–∞–≤-–≥–∞–≤! –î–∞–≤–∞–π —Å–∫–æ—Ä–µ–µ! ü¶¥",
        "–ö–æ—Ç–ª–µ—Ç–∫—É? –£—É—É—É, –¥–∞–≤–∞–π! üçñ",
    ],
    "–º—É—Ä–∫–∞ –∫–∞–∫–∞—è —Ç–≤–æ—è –ª—é–±–∏–º–∞—è –ø–µ—Å–Ω—è": [
        "Aerosmith - What It Takes! —É—É—Éüê∫üíÉ",
        "–Ø –ø–æ—é –≥—Ä–æ–º–∫–æ: –ì–ê–í-–ì–ê–í-–ì–ê–í üé∂",
    ],
    "–≥—É–ª—è—Ç—å": [
        "–ü–æ—à–ª–∏ —Å–∫–æ—Ä–µ–µ –≥—É–ª—è—Ç—å! üêïüå≥",
        "–£—Ä–∞! –ì—É–ª—è—Ç—å-–≥—É–ª—è—Ç—å-–≥—É–ª—è—Ç—å! üêæ",
    ],
    "–≤–∫—É—Å–Ω—è—à–∫": [
        "–î–∞–π –∫–æ—Ç–ª–µ—Ç–∫—É! üê∂üçñ",
        "–Ø –æ–±–æ–∂–∞—é –≤–∫—É—Å–Ω—è—à–∫–∏, –º–º–º ü¶¥",
    ],
    "–∫–æ—Ç–ª–µ—Ç": [
        "–ö–æ—Ç–ª–µ—Ç–∫–∞? –î–∞–π –¥–≤–µ! üçñüêæ",
        "–Ø –∑–∞ –∫–æ—Ç–ª–µ—Ç—É –≤—Å—ë —Å–¥–µ–ª–∞—é üêï",
    ],
    "–¥–∞–π –º—è—á": [
        "‚öΩ –í–æ—Ç —Ç–≤–æ–π –º—è—á–∏–∫, –∫–∏–¥–∞–π –æ–±—Ä–∞—Ç–Ω–æ!",
        "‚öΩ‚öΩ‚öΩ –ì–∞–≤-–≥–∞–≤, –∏–≥—Ä–∞–µ–º?",
    ],
    "–ø—Ä–∏–Ω–µ—Å–∏ –º—è—á": [
        "‚öΩ –Ø –ø—Ä–∏–Ω–µ—Å–ª–∞! –î–∞–≤–∞–π –µ—â—ë —Ä–∞–∑ –∫–∏–Ω—å!",
        "‚öΩ –ù–∞—à–ª–∞ –º—è—á–∏–∫, –¥–µ—Ä–∂–∏!",
    ],
    "–º—É—Ä–∫–∞ –æ—Ö—Ä–∞–Ω—è–π": [
        "–ì—Ä—Ä—Ä! –Ø –æ—Ö—Ä–∞–Ω—è—é —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—é üõ°Ô∏èüêï",
        "–ù–∏–∫—Ç–æ –Ω–µ –ø—Ä–æ–π–¥—ë—Ç! üê∫",
    ],
    "–º—É—Ä–∫–∞ –æ—Ö—Ä–∞–Ω—è–µ—à—å": [
        "–ö–æ–Ω–µ—á–Ω–æ, —è –Ω–∞ –ø–æ—Å—Ç—É! üêæüëÆ‚Äç‚ôÄÔ∏è",
        "–Ø –≤—Å–µ–≥–¥–∞ –æ—Ö—Ä–∞–Ω—è—é —Å–≤–æ–π —á–∞—Ç üõ°Ô∏è",
    ],
    "–º—É—Ä–∫–∞ –¥–∞–π –ª–∞–ø—É": [
        "üêæ –í–æ—Ç —Ç–µ–±–µ –ª–∞–ø–∫–∞!",
        "–õ–∞–ø–∫—É –¥–∞—é, —Ç–æ–ª—å–∫–æ –≤–∫—É—Å–Ω—è—à–∫—É –Ω–µ –∑–∞–±—É–¥—å üçñ",
    ],
    "–º—É—Ä–∫–∞ –¥–∞–π –ø—Ä–∞–≤—É—é –ª–∞–ø—É": [
        "üêæ –í–æ—Ç –ø—Ä–∞–≤–∞—è –ª–∞–ø–∫–∞!",
    ],
    "–º—É—Ä–∫–∞ –¥–∞–π –ª–µ–≤—É—é –ª–∞–ø—É": [
        "üêæ –í–æ—Ç –ª–µ–≤–∞—è –ª–∞–ø–∫–∞!",
    ],
    "–º—É—Ä–∫–∞ —Å–∫—É—á–Ω–æ": [
        "–î–∞–≤–∞–π –ø–æ–∏–≥—Ä–∞–µ–º —Å –º—è—á–∏–∫–æ–º ‚öΩ",
        "–•–æ—á–µ—à—å, –ø–æ–∫–∞–∂—É —Ç—Ä—é–∫? üê∂",
    ],
    "–º—É—Ä–∫–∞ –∑–∞—Å–∫—É—á–∞–ª–∞": [
        "–ì–∞–≤! –î–∞–≤–∞–π —á—Ç–æ-–Ω–∏–±—É–¥—å —Å–¥–µ–ª–∞–µ–º –≤–º–µ—Å—Ç–µ üêæ",
    ],
    "–º—É—Ä–∫–∞ —Å–ø–æ–π –ø–µ—Å–Ω—é": [
        "–ì–∞–≤-–≥–∞–≤-–≥–∞–≤-–≥–∞–≤ üé∂",
        "–ê—É—É—É—É—É üê∫üéµ",
    ],
    "–º—É—Ä–∫–∞ –ø–æ–ø–æ–π": [
        "–ì–ê–í-–ì–ê–í-–ì–ê–í! –≠—Ç–æ –º–æ—è –ø–µ—Å–Ω—è üé§üê∂",
    ],
    "–º—É—Ä–∫–∞ –∑–ª–∞—è": [
        "–ì—Ä—Ä—Ä—Ä—Ä—Ä üòàüêï",
        "–õ—É—á—à–µ –Ω–µ —à—É—Ç–∏ —Å–æ –º–Ω–æ–π! üê∫",
    ],
    "–º—É—Ä–∫–∞ –∑–ª–æ–π": [
        "–Ø –º–æ–≥—É –±—ã—Ç—å —Å—Ç—Ä–∞—à–Ω–æ–π! üêæüëπ",
        "–ì–∞–≤-–≥–∞–≤! –ù–µ –∑–ª–∏ –º–µ–Ω—è üêï",
    ],
}

# –ó–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ –∏ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è
BAD_PATTERNS = [
    r"\b—Ö[—Éy][–π–∏–µ—è—ë]\w*",
    r"\b–ø[–∏–µ]–∑–¥[–∞—ã–æ]*\w*",
    r"\b[–µ—ë]–±\w*",
    r"\b–±–ª[—è–µ]–¥[—å–π]*\w*",
    r"\b—Å—É–∫[–∞–∏–æ]*\w*",
    r"\b–º—É–¥[–∞–æ]–∫\w*",
    r"\b–ø–∏–¥[–æa]—Ä\w*",
    r"\b–¥—É—Ä–∞\w*",
    r"\b–¥—É—Ä–∞–∫\w*",
    r"\b—Ç—É–ø(–æ–π|–∞—è|—ã–µ|—ã–µ|–æ—Ä—ã–ª—ã–π)\b",
    r"\b–∂–æ–ø\w*",
    r"\b–ø–∏—Å—å–∫\w*",
    r"\b—á—É—à–∫–∞\b",
    r"\b—á—É—Ö–∞–Ω\w*",
    r"\b–µ–±–∞–Ω–∞—à–∫\w*",
    r"\b—Å–º–æ\b",
    r"\b–º—Ä–∞–∑—å\b",
    r"\b–¥–µ–±–∏–ª(–∫–∞)?\b",
    r"\b–¥–∏–±–∏–ª(–∫–∞)?\b",
    r"\b—É—Ä–æ–¥(–∫–∞|–∏–Ω–∞)?\b",
    r"\b–¥–∞—É–Ω\b",
    r"\b–¥–æ–ª–±–æ–µ–±\w*",
    r"\b–∫[–∞–æ]–∑–µ–ª\b",
    r"\b–ª–æ—Ö(–∏)?\b",
    r"\b–ª–æ—à–∞—Ä\w*",
    r"\b—á–º–æ–Ω—è\b",
    r"\b—á–º–æ\b",
    r"\b–≥–æ–≤–Ω–æ–µ–¥(—ã|–∫–∞)?\b",
    r"\b–≥–Ω–∏–¥–∞\b",
]
BAD_REGEXES = [re.compile(p, re.IGNORECASE) for p in BAD_PATTERNS]
BAD_REGEXES = [re.compile(p, re.IGNORECASE) for p in BAD_PATTERNS]

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –Ω–∞—Ä—É—à–µ–Ω–∏–π
violations = defaultdict(lambda: deque(maxlen=50))

@dataclass
class UserState:
    last_warn_at: float = 0.0

state = defaultdict(UserState)


# ---------- –õ–æ–≥–∏–∫–∞ ----------
async def handle_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    msg = update.effective_message
    chat = update.effective_chat
    user = update.effective_user

    if not msg or not user or not msg.text:
        return

    text = msg.text.lower()

    # --- –û—Ç–≤–µ—Ç—ã –ú—É—Ä–∫–∏ üê∂ ---
    for key, answers in MURKA_REPLIES.items():
        if key in text:
            await msg.reply_text(random.choice(answers))
            return

    # --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–ª–æ—Ö–∏–µ —Å–ª–æ–≤–∞ ---
    if not any(r.search(text) for r in BAD_REGEXES):
        return

    key = (chat.id, user.id)
    now = time.time()
    q = violations[key]

    # —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è
    while q and now - q[0] > WINDOW_SECONDS:
        q.popleft()
    q.append(now)
    strikes = len(q)

    st = state[key]
    name = user.mention_html()

    admin_chat_id = os.getenv("ADMIN_LOG_CHAT_ID")

    # –õ–° (–ø—Ä–æ—Å—Ç–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ)
    if chat.type == ChatType.PRIVATE:
        if now - st.last_warn_at > 15:
            await msg.reply_html(f"‚ö†Ô∏è {name}, –∞–∫–∫—É—Ä–∞—Ç–Ω–µ–µ —Å –≤—ã—Ä–∞–∂–µ–Ω–∏—è–º–∏.")
            st.last_warn_at = now
        return

    # –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
    if strikes < THRESHOLD:
        if now - st.last_warn_at > 15:
            warning_text = f"‚ö†Ô∏è {name}, –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ ({strikes}/{THRESHOLD}) –∑–∞ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è."
            await msg.reply_html(warning_text)
            if admin_chat_id:
                await context.bot.send_message(
                    chat_id=admin_chat_id,
                    text=f"üëÆ –í —á–∞—Ç–µ {chat.title} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {name} –ø–æ–ª—É—á–∏–ª –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ ({strikes}/{THRESHOLD}).",
                )
            st.last_warn_at = now
        return

    # –ù–∞–∫–∞–∑–∞–Ω–∏–µ
    try:
        me = await context.bot.get_chat_member(chat.id, context.bot.id)
        if me.can_restrict_members:
            until = datetime.now(timezone.utc) + timedelta(seconds=BAN_SECONDS)
            await context.bot.ban_chat_member(
                chat.id,
                user.id,
                until_date=until,
            )
            ban_text = f"‚õî {name} –ø–æ–ª—É—á–∏–ª –±–∞–Ω –Ω–∞ {BAN_SECONDS} —Å–µ–∫—É–Ω–¥!"
            await msg.reply_html(ban_text)
            if admin_chat_id:
                await context.bot.send_message(
                    chat_id=admin_chat_id,
                    text=f"üö´ –í —á–∞—Ç–µ {chat.title} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {name} –ø–æ–ª—É—á–∏–ª –ë–ê–ù –Ω–∞ {BAN_SECONDS} —Å–µ–∫—É–Ω–¥.",
                )
        else:
            funny_text = f"‚õî {name}, —Ç–µ–±–µ –ø–æ–≤–µ–∑–ª–æ, —É –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤, –Ω–æ –≤—Å–µ –∑–Ω–∞—é—Ç, —á—Ç–æ —Ç—ã –Ω–∞—Ä—É—à–∏—Ç–µ–ª—å üòÇ"
            await msg.reply_html(funny_text)
            if admin_chat_id:
                await context.bot.send_message(
                    chat_id=admin_chat_id,
                    text=f"‚ö†Ô∏è –í —á–∞—Ç–µ {chat.title} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {name} –∏–∑–±–µ–∂–∞–ª –Ω–∞–∫–∞–∑–∞–Ω–∏—è –∏–∑-–∑–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –ø—Ä–∞–≤ —É –±–æ—Ç–∞.",
                )
        q.clear()
        st.last_warn_at = now
    except Exception as e:
        await msg.reply_html(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –Ω–∞–∫–∞–∑–∞—Ç—å: {e}")


# ---------- –ö–æ–º–∞–Ω–¥—ã ----------
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ì–∞–≤-–≥–∞–≤! üê∂ –Ø –ú—É—Ä–∫–∞ ‚Äî —Ç–≤–æ–π –º–æ–¥–µ—Ä–∞—Ç–æ—Ä!\n"
        f"–Ø —Å–ª–µ–∂—É –∑–∞ —á–∞—Ç–æ–º –∏ –≤—ã–¥–∞—é –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –∑–∞ –ø–ª–æ—Ö–∏–µ —Å–ª–æ–≤–∞.\n"
        f"–ü–æ—Å–ª–µ {THRESHOLD} –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π ‚Äî –±–∞–Ω –Ω–∞ {BAN_SECONDS} —Å–µ–∫—É–Ω–¥.\n"
        "–ê –µ—â—ë —è –ª—é–±–ª—é –≥—É–ª—è—Ç—å, –≤–∫—É—Å–Ω—è—à–∫–∏ –∏ –∏–≥—Ä–∞—Ç—å —Å –º—è—á–∏–∫–æ–º ‚öΩ"
    )

async def status(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        f"‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏:\n"
        f"- –ü–æ—Ä–æ–≥: {THRESHOLD} –Ω–∞—Ä—É—à–µ–Ω–∏–π –∑–∞ {WINDOW_SECONDS} —Å–µ–∫—É–Ω–¥\n"
        f"- –ù–∞–∫–∞–∑–∞–Ω–∏–µ: {BAN_SECONDS} —Å–µ–∫—É–Ω–¥"
    )


# ---------- –ó–∞–ø—É—Å–∫ ----------
def main():
    load_dotenv()
    token = os.getenv("BOT_TOKEN")
    port = int(os.getenv("PORT", 8443))
    webhook_url = os.getenv("WEBHOOK_URL")

    app = ApplicationBuilder().token(token).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("status", status))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text))

    app.run_webhook(
        listen="0.0.0.0",
        port=port,
        url_path="webhook",
        webhook_url=f"{webhook_url}/webhook",
    )


if __name__ == "__main__":
    main()